{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // Node/Express API\n    this.REST_API = 'http://localhost:8000/api';\n    // Http Header\n    this.httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n  }\n  // Get all books\n  GetBooks() {\n    return this.httpClient.get(`${this.REST_API}`);\n  }\n  AddBook(data) {\n    let API_URL = `${this.REST_API}/add-book`;\n    return this.httpClient.post(API_URL, data).pipe(catchError(this.handleError));\n  }\n  DeleteBook(id) {\n    let API_URL = `${this.REST_API}/delete-book/${id}`;\n    return this.httpClient.delete(API_URL, {\n      headers: this.httpHeaders\n    }).pipe(catchError(this.handleError));\n  }\n  // Error\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Handle client error\n      errorMessage = error.error.message;\n    } else {\n      // Handle server error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","throwError","HttpHeaders","CrudService","constructor","httpClient","REST_API","httpHeaders","set","GetBooks","get","AddBook","data","API_URL","post","pipe","handleError","DeleteBook","id","delete","headers","error","errorMessage","ErrorEvent","message","status","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/jaquanrhodes/Desktop/web_course/CRUD-Application---Deleting/CRUD-Application---Creating-and-Reading/CRUDCreateReadGPStarting/mean-crud-booklist/src/app/service/crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Book } from './Book';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport {\n\tHttpClient,\n\tHttpHeaders,\n\tHttpErrorResponse,\n} from '@angular/common/http';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class CrudService {\n\t// Node/Express API\n\tREST_API: string = 'http://localhost:8000/api';\n\n\t// Http Header\n\thttpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n\n\tconstructor(private httpClient: HttpClient) {}\n\n\t// Get all books\n\tGetBooks() {\n\t\treturn this.httpClient.get(`${this.REST_API}`);\n\t}\n\n\tAddBook(data: Book): Observable<any> {\n\t\tlet API_URL = `${this.REST_API}/add-book`;\n\t\treturn this.httpClient\n\t\t\t.post(API_URL, data)\n\t\t\t.pipe(catchError(this.handleError));\n\t}\n\n\tDeleteBook(id: any): Observable<any> {\n\t\tlet API_URL = `${this.REST_API}/delete-book/${id}`;\n\t\treturn this.httpClient\n\t\t\t.delete(API_URL, { headers: this.httpHeaders })\n\t\t\t.pipe(catchError(this.handleError));\n\t}\n\n\t// Error\n\thandleError(error: HttpErrorResponse) {\n\t\tlet errorMessage = '';\n\t\tif (error.error instanceof ErrorEvent) {\n\t\t\t// Handle client error\n\t\t\terrorMessage = error.error.message;\n\t\t} else {\n\t\t\t// Handle server error\n\t\t\terrorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n\t\t}\n\t\tconsole.log(errorMessage);\n\t\treturn throwError(errorMessage);\n\t}\n}\n"],"mappings":"AAEA,SAASA,UAAU,QAAa,gBAAgB;AAChD,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAECC,WAAW,QAEL,sBAAsB;;;AAK7B,OAAM,MAAOC,WAAW;EAOvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAN9B;IACA,KAAAC,QAAQ,GAAW,2BAA2B;IAE9C;IACA,KAAAC,WAAW,GAAG,IAAIL,WAAW,EAAE,CAACM,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAE1B;EAE7C;EACAC,QAAQA,CAAA;IACP,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,QAAQ,EAAE,CAAC;EAC/C;EAEAK,OAAOA,CAACC,IAAU;IACjB,IAAIC,OAAO,GAAG,GAAG,IAAI,CAACP,QAAQ,WAAW;IACzC,OAAO,IAAI,CAACD,UAAU,CACpBS,IAAI,CAACD,OAAO,EAAED,IAAI,CAAC,CACnBG,IAAI,CAACf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAAC;EACrC;EAEAC,UAAUA,CAACC,EAAO;IACjB,IAAIL,OAAO,GAAG,GAAG,IAAI,CAACP,QAAQ,gBAAgBY,EAAE,EAAE;IAClD,OAAO,IAAI,CAACb,UAAU,CACpBc,MAAM,CAACN,OAAO,EAAE;MAAEO,OAAO,EAAE,IAAI,CAACb;IAAW,CAAE,CAAC,CAC9CQ,IAAI,CAACf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAAC;EACrC;EAEA;EACAA,WAAWA,CAACK,KAAwB;IACnC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACtC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KAClC,MAAM;MACN;MACAF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAExEE,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IACzB,OAAOrB,UAAU,CAACqB,YAAY,CAAC;EAChC;;AAxCYnB,WAAW,C;mBAAXA,WAAW,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAX5B,WAAW,C;SAAXA,WAAW;EAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}